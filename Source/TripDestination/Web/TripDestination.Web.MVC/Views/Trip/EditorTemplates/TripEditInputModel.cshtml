@model TripEditInputModel

@{
    var passengersCount = Model.Passengers.Count;
}

@Html.EditorFor(m => m.PlaceOfLeaving)

<div class="row">
    <div class="col-md-6">
        @Html.EditorFor(m => m.PickUpFromAddress, "CustomDropDownList", new { selectListItems = Model.AddressPickUpSelectList })
    </div>
    <div class="col-md-6">
        @Html.EditorFor(m => m.LeftAvailableSeats, "CustomDropDownList", new { selectListItems = Model.LeaftAvailabeSeatsSelectList })
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        @Html.EditorFor(m => m.DateOfLeaving)
    </div>

    <div class="col-md-6">
        @Html.EditorFor(m => m.ETA)
    </div>
</div>

@Html.EditorFor(m => m.Description)


<h5>Passengers (<span id="passengersCount">@passengersCount</span>)</h5>
<h6>Remove passenger</h6>
@if (passengersCount > 0)
{
    <ul id="passengersList" class="passengersUl">
        @foreach (var passenger in Model.Passengers)
        {
            <li>
                <a href="#">
                    <div class="image" style="background-image: url('@passenger.AvatarUrlSmall')"></div>
                    <div class="firstName">@passenger.FirstName</div>
                    <div class="lastName">@passenger.LastName</div>
                </a>
                <div class="removePassengerButton btn btn-default" data-username="@passenger.Username">Remove</div>
            </li>
        }        
    </ul>
    
    @Html.TextBoxFor(m => m.UsernamesToBeRemoved, new { hidden = "hidden" })
}
else
{
    <p class="notLoginMessage">No passengers have joined your trip yet.</p>
}


<div id="buttonsFromWrap" class="row">
    <div class="col-md-12">
        <a href="@Url.RouteUrl("TripDetails", new { id = Model.Id, slug = Model.FromTownName + "-" + Model.ToTownName })" class="button2">Cancel</a>
        <input type="submit" class="button editTripSave" value="Save changes">
    </div>
</div>